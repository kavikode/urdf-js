{"version":3,"file":"urdf-manipulator-element.js","sources":["../src/URDFClasses.js","../src/URDFLoader.js","../src/urdf-viewer-element.js","../src/urdf-manipulator-element.js"],"sourcesContent":["import { Object3D, Quaternion } from 'three';\n\nfunction URDFColliderClone(...args) {\n\n    const proto = Object.getPrototypeOf(this);\n    const result = proto.clone.call(this, ...args);\n    result.isURDFCollider = true;\n    return result;\n\n};\n\nfunction makeURDFCollider(object) {\n\n    object.isURDFCollider = true;\n    object.clone = URDFColliderClone;\n\n}\n\nclass URDFLink extends Object3D {\n\n    constructor(...args) {\n\n        super(...args);\n        this.isURDFLink = true;\n        this.type = 'URDFLink';\n        this.urdfNode = null;\n\n    }\n\n    copy(source, recursive) {\n\n        super.copy(source, recursive);\n        this.urdfNode = source.urdfNode;\n\n        return this;\n\n    }\n\n}\n\nclass URDFJoint extends Object3D {\n\n    get jointType() {\n\n        return this._jointType;\n\n    }\n    set jointType(v) {\n\n        if (this.jointType === v) return;\n        this._jointType = v;\n\n        switch (v) {\n\n            case 'fixed':\n            case 'continuous':\n            case 'revolute':\n            case 'prismatic':\n                this.jointValue = 0;\n                break;\n\n            case 'planar':\n                this.jointValue = new Array(2).fill(0);\n                break;\n\n            case 'floating':\n                this.jointValue = new Array(6).fill(0);\n                break;\n\n        }\n\n    }\n\n    get angle() {\n\n        return this.jointValue;\n\n    }\n\n    constructor(...args) {\n        super(...args);\n\n        this.isURDFJoint = true;\n        this.type = 'URDFJoint';\n\n        this.urdfNode = null;\n        this.jointValue = null;\n        this.jointType = 'fixed';\n        this.axis = null;\n        this.limit = { lower: 0, upper: 0 };\n        this.ignoreLimits = false;\n\n        this.origPosition = null;\n        this.origQuaternion = null;\n    }\n\n    /* Overrides */\n    copy(source, recursive) {\n\n        super.copy(source, recursive);\n\n        this.urdfNode = source.urdfNode;\n        this.jointType = source.jointType;\n        this.axis = source.axis ? source.axis.clone() : null;\n        this.limit.lower = source.limit.lower;\n        this.limit.upper = source.limit.upper;\n        this.ignoreLimits = false;\n\n        this.jointValue = Array.isArray(source.jointValue) ? [...source.jointValue] : source.jointValue;\n\n        this.origPosition = source.origPosition ? source.origPosition.clone() : null;\n        this.origQuaternion = source.origQuaternion ? source.origQuaternion.clone() : null;\n\n        return this;\n    }\n\n    /* Public Functions */\n    setAngle(...values) {\n        return this.setOffset(...values);\n    }\n\n    setOffset(...values) {\n\n        values = values.map(v => parseFloat(v));\n\n        if (!this.origPosition || !this.origQuaternion) {\n\n            this.origPosition = this.position.clone();\n            this.origQuaternion = this.quaternion.clone();\n\n        }\n\n        switch (this.jointType) {\n\n            case 'fixed': {\n                break;\n            }\n            case 'continuous':\n            case 'revolute': {\n\n                let angle = values[0];\n                if (angle == null) break;\n                if (angle === this.jointValue) break;\n\n                if (!this.ignoreLimits && this.jointType === 'revolute') {\n\n                    angle = Math.min(this.limit.upper, angle);\n                    angle = Math.max(this.limit.lower, angle);\n\n                }\n\n                // FromAxisAngle seems to rotate the opposite of the\n                // expected angle for URDF, so negate it here\n                const delta = new Quaternion().setFromAxisAngle(this.axis, angle);\n                this.quaternion.multiplyQuaternions(this.origQuaternion, delta);\n\n                this.jointValue = angle;\n                this.matrixWorldNeedsUpdate = true;\n\n                break;\n            }\n\n            case 'prismatic': {\n\n                let angle = values[0];\n                if (angle == null) break;\n                if (angle === this.jointValue) break;\n\n                if (!this.ignoreLimits) {\n\n                    angle = Math.min(this.limit.upper, angle);\n                    angle = Math.max(this.limit.lower, angle);\n\n                }\n\n                this.position.copy(this.origPosition);\n                this.position.addScaledVector(this.axis, angle);\n\n                this.jointValue = angle;\n                this.worldMatrixNeedsUpdate = true;\n                break;\n\n            }\n\n            case 'floating':\n            case 'planar':\n                // TODO: Support these joint types\n                console.warn(`'${ this.jointType }' joint not yet supported`);\n\n        }\n\n        return this.jointValue;\n\n    }\n\n}\n\nclass URDFRobot extends URDFLink {\n\n    constructor(...args) {\n\n        super(...args);\n        this.isURDFRobot = true;\n        this.urdfNode = null;\n\n        this.urdfRobotNode = null;\n        this.robotName = null;\n\n        this.links = null;\n        this.joints = null;\n\n    }\n\n    copy(source, recursive) {\n\n        super.copy(source, recursive);\n\n        this.urdfRobotNode = source.urdfRobotNode;\n        this.robotName = source.robotName;\n\n        this.links = {};\n        this.joints = {};\n\n        this.traverse(c => {\n\n            if (c.isURDFJoint && c.name in source.joints) {\n\n                this.joints[c.name] = c;\n\n            }\n\n            if (c.isURDFLink && c.name in source.links) {\n\n                this.links[c.name] = c;\n\n            }\n\n        });\n\n        return this;\n\n    }\n\n    setAngle(jointName, ...angle) {\n\n        const joint = this.joints[jointName];\n        if (joint) {\n\n            return joint.setAngle(...angle);\n\n        }\n\n        return null;\n    }\n\n    setAngles(angles) {\n\n        // TODO: How to handle other, multi-dimensional joint types?\n        for (const name in angles) this.setAngle(name, angles[name]);\n\n    }\n\n}\n\nexport { URDFRobot, URDFLink, URDFJoint, makeURDFCollider };\n","import * as THREE from 'three';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader.js';\nimport { ColladaLoader } from 'three/examples/jsm/loaders/ColladaLoader.js';\nimport { URDFRobot, URDFJoint, URDFLink, makeURDFCollider } from './URDFClasses.js';\nimport { MeshBVH, acceleratedRaycast } from 'three-mesh-bvh';\n\n/*\nReference coordinate frames for THREE.js and ROS.\nBoth coordinate systems are right handed so the URDF is instantiated without\nframe transforms. The resulting model can be rotated to rectify the proper up,\nright, and forward directions\n\nTHREE.js\n   Y\n   |\n   |\n   .-----X\n ／\nZ\n\nROS URDf\n       Z\n       |   X\n       | ／\n Y-----.\n\n*/\n\nconst tempQuaternion = new THREE.Quaternion();\nconst tempEuler = new THREE.Euler();\n\n// take a vector \"x y z\" and process it into\n// an array [x, y, z]\nfunction processTuple(val) {\n\n    if (!val) return [0, 0, 0];\n    return val.trim().split(/\\s+/g).map(num => parseFloat(num));\n\n}\n\n// applies a rotation a threejs object in URDF order\nfunction applyRotation(obj, rpy, additive = false) {\n\n    // if additive is true the rotation is applied in\n    // addition to the existing rotation\n    if (!additive) obj.rotation.set(0, 0, 0);\n\n    tempEuler.set(rpy[0], rpy[1], rpy[2], 'ZYX');\n    tempQuaternion.setFromEuler(tempEuler);\n    tempQuaternion.multiply(obj.quaternion);\n    obj.quaternion.copy(tempQuaternion);\n\n}\n\n/* URDFLoader Class */\n// Loads and reads a URDF file into a THREEjs Object3D format\nexport default\nclass URDFLoader {\n\n    constructor(manager) {\n\n        this.manager = manager || THREE.DefaultLoadingManager;\n\n    }\n\n    /* Public API */\n    // urdf:    The path to the URDF within the package OR absolute\n    // onComplete:      Callback that is passed the model once loaded\n    load(urdf, onComplete, onProgress, onError, options) {\n\n        // Check if a full URI is specified before\n        // prepending the package info\n        const manager = this.manager;\n        const workingPath = THREE.LoaderUtils.extractUrlBase(urdf);\n        const urdfPath = this.manager.resolveURL(urdf);\n\n        const errors = {};\n\n        let managerOnErrorDefault = function() {};\n        let managerOnProgressDefault = function() {};\n        let managerOnLoadDefault = function() {};\n        let model;\n\n        if (manager.onError) {\n\n            managerOnErrorDefault = manager.onProgress.bind(manager);\n\n        }\n\n        if (manager.onProgress) {\n\n            managerOnProgressDefault = manager.onProgress.bind(manager);\n\n        }\n\n        if (manager.onLoad) {\n\n            managerOnLoadDefault = manager.onLoad.bind(manager);\n\n        }\n\n        manager.onError = function(url) {\n\n            errors[url] = 'Error in loading resource';\n\n            if (onError) {\n\n                onError(url);\n\n            }\n\n            managerOnErrorDefault(url);\n\n        };\n\n        manager.onProgress = function(url, itemsLoaded, itemsTotal) {\n\n            if (onProgress) {\n\n                onProgress(url, itemsLoaded, itemsTotal);\n\n            }\n\n            managerOnProgressDefault(url, itemsLoaded, itemsTotal);\n\n        };\n\n        manager.onLoad = function() {\n\n            if (onComplete) {\n\n                const partialErrors = Object.keys(errors).length === 0\n                    ? undefined\n                    : errors;\n\n                onComplete(model, partialErrors);\n\n            }\n\n            managerOnLoadDefault();\n\n        };\n\n        options = Object.assign({\n            workingPath,\n        }, options);\n\n        manager.itemStart(urdfPath);\n        fetch(urdfPath, options.fetchOptions)\n            .then(res => res.text())\n            .then(data => {\n\n                model = this.parse(data, options);\n                manager.itemEnd(urdfPath);\n\n            })\n            .catch(e => {\n\n                console.error('URDFLoader: Error parsing file.', e);\n                manager.itemError(urdfPath);\n                manager.itemEnd(urdfPath);\n\n            });\n\n    }\n\n    parse(content, options = {}) {\n\n        const packages = options.packages || '';\n        const loadMeshCb = options.loadMeshCb || this.defaultMeshLoader.bind(this);\n        const workingPath = options.workingPath || '';\n        const parseVisual = ('parseVisual' in options) ? options.parseVisual : true;\n        const parseCollision = options.parseCollision || false;\n        const manager = this.manager;\n        const linkMap = {};\n        const jointMap = {};\n        const materialMap = {};\n\n        // Resolves the path of mesh files\n        function resolvePath(path) {\n\n            if (!/^package:\\/\\//.test(path)) {\n\n                return workingPath ? workingPath + path : path;\n\n            }\n\n            // Remove \"package://\" keyword and split meshPath at the first slash\n            const [targetPkg, relPath] = path.replace(/^package:\\/\\//, '').split(/\\/(.+)/);\n\n            if (typeof packages === 'string') {\n\n                // \"pkg\" is one single package\n                if (packages.endsWith(targetPkg)) {\n\n                    // \"pkg\" is the target package\n                    return packages + '/' + relPath;\n\n                } else {\n\n                    // Assume \"pkg\" is the target package's parent directory\n                    return packages + '/' + targetPkg + '/' + relPath;\n\n                }\n\n            } else if (typeof packages === 'object') {\n\n                // \"pkg\" is a map of packages\n                if (targetPkg in packages) {\n\n                    return packages[targetPkg] + '/' + relPath;\n\n                } else {\n\n                    console.error(`URDFLoader : ${ targetPkg } not found in provided package list.`);\n                    return null;\n\n                }\n\n            }\n\n        }\n\n        // Process the URDF text format\n        function processUrdf(data) {\n\n            const parser = new DOMParser();\n            const urdf = parser.parseFromString(data, 'text/xml');\n            const children = [ ...urdf.children ];\n\n            const robotNode = children.filter(c => c.nodeName === 'robot').pop();\n            return processRobot(robotNode);\n\n        }\n\n        // Process the <robot> node\n        function processRobot(robot) {\n\n            const robotNodes = [ ...robot.children ];\n            const links = robotNodes.filter(c => c.nodeName.toLowerCase() === 'link');\n            const joints = robotNodes.filter(c => c.nodeName.toLowerCase() === 'joint');\n            const materials = robotNodes.filter(c => c.nodeName.toLowerCase() === 'material');\n            const obj = new URDFRobot();\n\n            obj.robotName = robot.getAttribute('name');\n            obj.urdfRobotNode = robot;\n\n            // Create the <material> map\n            materials.forEach(m => {\n\n                const name = m.getAttribute('name');\n                materialMap[name] = processMaterial(m);\n\n            });\n\n            // Create the <link> map\n            links.forEach(l => {\n\n                const name = l.getAttribute('name');\n                const isRoot = robot.querySelector(`child[link=\"${ name }\"]`) === null;\n                linkMap[name] = processLink(l, isRoot ? obj : null);\n\n            });\n\n            // Create the <joint> map\n            joints.forEach(j => {\n\n                const name = j.getAttribute('name');\n                jointMap[name] = processJoint(j);\n\n            });\n\n            obj.joints = jointMap;\n            obj.links = linkMap;\n\n            return obj;\n\n        }\n\n        // Process joint nodes and parent them\n        function processJoint(joint) {\n\n            const children = [ ...joint.children ];\n            const jointType = joint.getAttribute('type');\n            const obj = new URDFJoint();\n            obj.urdfNode = joint;\n            obj.name = joint.getAttribute('name');\n            obj.jointType = jointType;\n\n            let parent = null;\n            let child = null;\n            let xyz = [0, 0, 0];\n            let rpy = [0, 0, 0];\n\n            // Extract the attributes\n            children.forEach(n => {\n\n                const type = n.nodeName.toLowerCase();\n                if (type === 'origin') {\n\n                    xyz = processTuple(n.getAttribute('xyz'));\n                    rpy = processTuple(n.getAttribute('rpy'));\n\n                } else if (type === 'child') {\n\n                    child = linkMap[n.getAttribute('link')];\n\n                } else if (type === 'parent') {\n\n                    parent = linkMap[n.getAttribute('link')];\n\n                } else if (type === 'limit') {\n\n                    obj.limit.lower = parseFloat(n.getAttribute('lower') || obj.limit.lower);\n                    obj.limit.upper = parseFloat(n.getAttribute('upper') || obj.limit.upper);\n\n                }\n\n            });\n\n            // Join the links\n            parent.add(obj);\n            obj.add(child);\n            applyRotation(obj, rpy);\n            obj.position.set(xyz[0], xyz[1], xyz[2]);\n\n            // Set up the rotate function\n            const axisNode = children.filter(n => n.nodeName.toLowerCase() === 'axis')[0];\n\n            if (axisNode) {\n\n                const axisXYZ = axisNode.getAttribute('xyz').split(/\\s+/g).map(num => parseFloat(num));\n                obj.axis = new THREE.Vector3(axisXYZ[0], axisXYZ[1], axisXYZ[2]);\n                obj.axis.normalize();\n\n            }\n\n            return obj;\n\n        }\n\n        // Process the <link> nodes\n        function processLink(link, target = null) {\n\n            if (target === null) {\n\n                target = new URDFLink();\n\n            }\n\n            const children = [ ...link.children ];\n            target.name = link.getAttribute('name');\n            target.urdfNode = link;\n\n            if (parseVisual) {\n                const visualNodes = children.filter(n => n.nodeName.toLowerCase() === 'visual');\n                visualNodes.forEach(vn => processLinkElement(vn, target, materialMap));\n            }\n            if (parseCollision) {\n                const collisionNodes = children.filter(n => n.nodeName.toLowerCase() === 'collision');\n                collisionNodes.forEach(vn => processLinkElement(vn, target));\n            }\n\n            return target;\n\n        }\n\n        function processMaterial(node) {\n\n            const matNodes = [ ...node.children ];\n            const material = new THREE.MeshPhongMaterial();\n\n            material.name = node.getAttribute('name') || '';\n            matNodes.forEach(n => {\n\n                const type = n.nodeName.toLowerCase();\n                if (type === 'color') {\n\n                    const rgba =\n                        n\n                            .getAttribute('rgba')\n                            .split(/\\s/g)\n                            .map(v => parseFloat(v));\n\n                    material.color.setRGB(rgba[0], rgba[1], rgba[2]);\n                    material.opacity = rgba[3];\n                    material.transparent = rgba[3] < 1;\n\n                } else if (type === 'texture') {\n\n                    const loader = new THREE.TextureLoader(manager);\n                    const filename = n.getAttribute('filename');\n                    const filePath = resolvePath(filename);\n                    material.map = loader.load(filePath);\n\n                }\n            });\n\n            return material;\n\n        }\n\n        // Process the visual and collision nodes into meshes\n        function processLinkElement(vn, linkObj, materialMap = {}) {\n\n            const isCollisionNode = vn.nodeName.toLowerCase() === 'collision';\n            let xyz = [0, 0, 0];\n            let rpy = [0, 0, 0];\n            let scale = [1, 1, 1];\n\n            const children = [ ...vn.children ];\n            let material = null;\n            let primitiveModel = null;\n\n            // get the material first\n            const materialNode = children.filter(n => n.nodeName.toLowerCase() === 'material')[0];\n            if (materialNode) {\n\n                const name = materialNode.getAttribute('name');\n                if (name && name in materialMap) {\n\n                    material = materialMap[name];\n\n                } else {\n\n                    material = processMaterial(materialNode);\n\n                }\n\n            } else {\n\n                material = new THREE.MeshPhongMaterial();\n\n            }\n\n            children.forEach(n => {\n\n                const type = n.nodeName.toLowerCase();\n                if (type === 'geometry') {\n\n                    const geoType = n.children[0].nodeName.toLowerCase();\n                    if (geoType === 'mesh') {\n\n                        const filename = n.children[0].getAttribute('filename');\n                        const filePath = resolvePath(filename);\n\n                        // file path is null if a package directory is not provided.\n                        if (filePath !== null) {\n\n                            const scaleAttr = n.children[0].getAttribute('scale');\n                            if (scaleAttr) scale = processTuple(scaleAttr);\n\n                            loadMeshCb(filePath, manager, (obj, err) => {\n\n                                if (err) {\n\n                                    console.error('URDFLoader: Error loading mesh.', err);\n\n                                } else if (obj) {\n\n                                    if (obj instanceof THREE.Mesh) {\n\n                                        obj.material = material;\n                                        obj.raycast = acceleratedRaycast;\n                                        obj.geometry.boundsTree = new MeshBVH(obj.geometry);\n\n                                    }\n\n                                    linkObj.add(obj);\n\n                                    obj.position.set(xyz[0], xyz[1], xyz[2]);\n                                    obj.rotation.set(0, 0, 0);\n\n                                    // multiply the existing scale by the scale components because\n                                    // the loaded model could have important scale values already applied\n                                    // to the root. Collada files, for example, can load in with a scale\n                                    // to convert the model units to meters.\n                                    obj.scale.x *= scale[0];\n                                    obj.scale.y *= scale[1];\n                                    obj.scale.z *= scale[2];\n\n                                    applyRotation(obj, rpy);\n\n                                    if (isCollisionNode) {\n\n                                        makeURDFCollider(obj);\n\n                                    }\n\n                                }\n\n                            });\n\n                        }\n\n                    } else if (geoType === 'box') {\n\n                        primitiveModel = new THREE.Mesh();\n                        primitiveModel.geometry = new THREE.BoxBufferGeometry(1, 1, 1);\n                        primitiveModel.material = material;\n\n                        primitiveModel.raycast = acceleratedRaycast;\n                        primitiveModel.geometry.boundsTree = new MeshBVH(primitiveModel.geometry);\n\n                        const size = processTuple(n.children[0].getAttribute('size'));\n\n                        linkObj.add(primitiveModel);\n                        primitiveModel.scale.set(size[0], size[1], size[2]);\n\n                        if (isCollisionNode) {\n\n                            makeURDFCollider(primitiveModel);\n\n                        }\n\n                    } else if (geoType === 'sphere') {\n\n                        primitiveModel = new THREE.Mesh();\n                        primitiveModel.geometry = new THREE.SphereBufferGeometry(1, 30, 30);\n                        primitiveModel.material = material;\n\n                        primitiveModel.raycast = acceleratedRaycast;\n                        primitiveModel.geometry.boundsTree = new MeshBVH(primitiveModel.geometry);\n\n                        const radius = parseFloat(n.children[0].getAttribute('radius')) || 0;\n                        primitiveModel.scale.set(radius, radius, radius);\n\n                        linkObj.add(primitiveModel);\n\n                        if (isCollisionNode) {\n\n                            makeURDFCollider(primitiveModel);\n\n                        }\n\n                    } else if (geoType === 'cylinder') {\n\n                        primitiveModel = new THREE.Mesh();\n                        primitiveModel.geometry = new THREE.CylinderBufferGeometry(1, 1, 1, 30);\n                        primitiveModel.material = material;\n\n                        primitiveModel.raycast = acceleratedRaycast;\n                        primitiveModel.geometry.boundsTree = new MeshBVH(primitiveModel.geometry);\n\n                        const radius = parseFloat(n.children[0].getAttribute('radius')) || 0;\n                        const length = parseFloat(n.children[0].getAttribute('length')) || 0;\n                        primitiveModel.scale.set(radius, length, radius);\n                        primitiveModel.rotation.set(Math.PI / 2, 0, 0);\n\n                        linkObj.add(primitiveModel);\n\n                        if (isCollisionNode) {\n\n                            makeURDFCollider(primitiveModel);\n\n                        }\n\n                    }\n\n                } else if (type === 'origin') {\n\n                    xyz = processTuple(n.getAttribute('xyz'));\n                    rpy = processTuple(n.getAttribute('rpy'));\n\n                }\n\n            });\n\n            // apply the position and rotation to the primitive geometry after\n            // the fact because it's guaranteed to have been scraped from the child\n            // nodes by this point\n            if (primitiveModel) {\n\n                applyRotation(primitiveModel, rpy, true);\n                primitiveModel.position.set(xyz[0], xyz[1], xyz[2]);\n\n            }\n\n        }\n\n        return processUrdf(content);\n\n    }\n\n    // Default mesh loading function\n    defaultMeshLoader(path, manager, done) {\n\n        if (/\\.stl$/i.test(path)) {\n\n            const loader = new STLLoader(manager);\n            loader.load(path, geom => {\n                const mesh = new THREE.Mesh(geom, new THREE.MeshPhongMaterial());\n                done(mesh);\n            });\n\n        } else if (/\\.dae$/i.test(path)) {\n\n            const loader = new ColladaLoader(manager);\n            loader.load(path, dae => done(dae.scene));\n\n        } else {\n\n            console.warn(`URDFLoader: Could not load model at ${ path }.\\nNo loader available`);\n\n        }\n\n    }\n\n};\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/js/controls/OrbitControls';\nimport URDFLoader from './URDFLoader.js';\n\n// urdf-viewer element\n// Loads and displays a 3D view of a URDF-formatted robot\n\n// Events\n// urdf-change: Fires when the URDF has finished loading and getting processed\n// urdf-processed: Fires when the URDF has finished loading and getting processed\n// geometry-loaded: Fires when all the geometry has been fully loaded\n// ignore-limits-change: Fires when the 'ignore-limits' attribute changes\n// angle-change: Fires when an angle changes\nexport default\nclass URDFViewer extends HTMLElement {\n\n    static get observedAttributes() {\n\n        return ['package', 'urdf', 'up', 'display-shadow', 'ambient-color', 'ignore-limits'];\n\n    }\n\n    get package() { return this.getAttribute('package') || ''; }\n    set package(val) { this.setAttribute('package', val); }\n\n    get urdf() { return this.getAttribute('urdf') || ''; }\n    set urdf(val) { this.setAttribute('urdf', val); }\n\n    get ignoreLimits() { return this.hasAttribute('ignore-limits') || false; }\n    set ignoreLimits(val) { val ? this.setAttribute('ignore-limits', val) : this.removeAttribute('ignore-limits'); }\n\n    get up() { return this.getAttribute('up') || '+Z'; }\n    set up(val) { this.setAttribute('up', val); }\n\n    get displayShadow() { return this.hasAttribute('display-shadow') || false; }\n    set displayShadow(val) { val ? this.setAttribute('display-shadow', '') : this.removeAttribute('display-shadow'); }\n\n    get ambientColor() { return this.getAttribute('ambient-color') || '#455A64'; }\n    set ambientColor(val) { val ? this.setAttribute('ambient-color', val) : this.removeAttribute('ambient-color'); }\n\n    get autoRedraw() { return this.hasAttribute('auto-redraw') || false; }\n    set autoRedraw(val) { val ? this.setAttribute('auto-redraw', true) : this.removeAttribute('auto-redraw'); }\n\n    get noAutoRecenter() { return this.hasAttribute('no-auto-recenter') || false; }\n    set noAutoRecenter(val) { val ? this.setAttribute('no-auto-recenter', true) : this.removeAttribute('no-auto-recenter'); }\n\n    get angles() {\n\n        const angles = {};\n        if (this.robot) {\n\n            for (const name in this.robot.joints) angles[name] = this.robot.joints[name].angle;\n\n        }\n\n        return angles;\n\n    }\n    set angles(val) { this._setAngles(val); }\n\n    /* Lifecycle Functions */\n    constructor() {\n\n        super();\n\n        this._requestId = 0;\n        this._dirty = false;\n        this._loadScheduled = false;\n        this.robot = null;\n        this.loadMeshFunc = null;\n        this.urlModifierFunc = null;\n\n        // Scene setup\n        const scene = new THREE.Scene();\n\n        const ambientLight = new THREE.HemisphereLight(this.ambientColor, '#000');\n        ambientLight.groundColor.lerp(ambientLight.color, 0.5);\n        ambientLight.intensity = 0.5;\n        ambientLight.position.set(0, 1, 0);\n        scene.add(ambientLight);\n\n        // Light setup\n        const dirLight = new THREE.DirectionalLight(0xffffff);\n        dirLight.position.set(4, 10, 1);\n        dirLight.shadow.mapSize.width = 2048;\n        dirLight.shadow.mapSize.height = 2048;\n        dirLight.castShadow = true;\n        scene.add(dirLight);\n        scene.add(dirLight.target);\n\n        // Renderer setup\n        const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        renderer.setClearColor(0xffffff);\n        renderer.setClearAlpha(0);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        renderer.gammaOutput = true;\n\n        // Camera setup\n        const camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\n        camera.position.z = -10;\n\n        // World setup\n        const world = new THREE.Object3D();\n        scene.add(world);\n\n        const plane = new THREE.Mesh(\n            new THREE.PlaneBufferGeometry(40, 40),\n            new THREE.ShadowMaterial({ side: THREE.DoubleSide, transparent: true, opacity: 0.5 })\n        );\n        plane.rotation.x = -Math.PI / 2;\n        plane.position.y = -0.5;\n        plane.receiveShadow = true;\n        plane.scale.set(10, 10, 10);\n        scene.add(plane);\n\n        // Controls setup\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.rotateSpeed = 2.0;\n        controls.zoomSpeed = 5;\n        controls.panSpeed = 2;\n        controls.enableZoom = true;\n        controls.enableDamping = false;\n        controls.maxDistance = 50;\n        controls.minDistance = 0.25;\n        controls.addEventListener('change', () => this.recenter());\n\n        this.scene = scene;\n        this.world = world;\n        this.renderer = renderer;\n        this.camera = camera;\n        this.controls = controls;\n        this.plane = plane;\n        this.directionalLight = dirLight;\n        this.ambientLight = ambientLight;\n\n        this._setUp(this.up);\n\n        const _renderLoop = () => {\n\n            if (this.parentNode) {\n\n                this.updateSize();\n\n                if (this._dirty || this.autoRedraw) {\n\n                    if (!this.noAutoRecenter) {\n\n                        this._updateEnvironment();\n                    }\n\n                    this.renderer.render(scene, camera);\n                    this._dirty = false;\n\n                }\n\n                // update controls after the environment in\n                // case the controls are retargeted\n                this.controls.update();\n\n            }\n            this._renderLoopId = requestAnimationFrame(_renderLoop);\n\n        };\n        _renderLoop();\n\n    }\n\n    connectedCallback() {\n\n        // Add our initialize styles for the element if they haven't\n        // been added yet\n        if (!this.constructor._styletag) {\n\n            const styletag = document.createElement('style');\n            styletag.innerHTML =\n            `\n                ${ this.tagName } { display: block; }\n                ${ this.tagName } canvas {\n                    width: 100%;\n                    height: 100%;\n                }\n            `;\n            document.head.appendChild(styletag);\n            this.constructor._styletag = styletag;\n\n        }\n\n        // add the renderer\n        if (this.childElementCount === 0) {\n\n            this.appendChild(this.renderer.domElement);\n\n        }\n\n        this.updateSize();\n        requestAnimationFrame(() => this.updateSize());\n\n    }\n\n    disconnectedCallback() {\n\n        cancelAnimationFrame(this._renderLoopId);\n\n    }\n\n    attributeChangedCallback(attr, oldval, newval) {\n\n        this.recenter();\n\n        switch (attr) {\n\n            case 'package':\n            case 'urdf': {\n\n                this._scheduleLoad();\n                break;\n\n            }\n\n            case 'up': {\n\n                this._setUp(this.up);\n                break;\n\n            }\n\n            case 'ambient-color': {\n\n                this.ambientLight.color.set(this.ambientColor);\n                this.ambientLight.groundColor.set('#000').lerp(this.ambientLight.color, 0.5);\n                break;\n\n            }\n\n            case 'ignore-limits': {\n\n                this._setIgnoreLimits(this.ignoreLimits, true);\n                break;\n\n            }\n\n        }\n\n    }\n\n    /* Public API */\n    updateSize() {\n\n        const r = this.renderer;\n        const w = this.clientWidth;\n        const h = this.clientHeight;\n        const currsize = r.getSize();\n\n        if (currsize.width !== w || currsize.height !== h) {\n\n            this.recenter();\n\n        }\n\n        r.setPixelRatio(window.devicePixelRatio);\n        r.setSize(w, h, false);\n\n        this.camera.aspect = w / h;\n        this.camera.updateProjectionMatrix();\n\n    }\n\n    redraw() {\n\n        this._dirty = true;\n    }\n\n    recenter() {\n\n        this._updateEnvironment();\n        this.redraw();\n\n    }\n\n    // Set the joint with jointName to\n    // angle in degrees\n    setAngle(jointName, angle) {\n\n        if (!this.robot) return;\n        if (!this.robot.joints[jointName]) return;\n\n        const origAngle = this.robot.joints[jointName].angle;\n        const newAngle = this.robot.setAngle(jointName, angle);\n        if (origAngle !== newAngle) {\n            this.redraw();\n        }\n\n        this.dispatchEvent(new CustomEvent('angle-change', { bubbles: true, cancelable: true, detail: jointName }));\n\n    }\n\n    setAngles(angles) {\n\n        for (const name in angles) this.setAngle(name, angles[name]);\n\n    }\n\n    /* Private Functions */\n    // Updates the position of the plane to be at the\n    // lowest point below the robot and focuses the\n    // camera on the center of the scene\n    _updateEnvironment() {\n\n        if (!this.robot) return;\n\n        this.world.updateMatrixWorld();\n\n        const bbox = new THREE.Box3();\n        const temp = new THREE.Box3();\n\n        this.robot.traverse(c => {\n\n            const geometry = c.geometry;\n            if (geometry) {\n\n                if (geometry.boundingBox === null) {\n\n                    geometry.computeBoundingBox();\n\n                }\n\n                temp.copy(geometry.boundingBox);\n                temp.applyMatrix4(c.matrixWorld);\n\n                bbox.union(temp);\n\n            }\n\n        });\n\n        const center = bbox.getCenter(new THREE.Vector3());\n        this.controls.target.y = center.y;\n        this.plane.position.y = bbox.min.y - 1e-3;\n\n        const dirLight = this.directionalLight;\n        dirLight.castShadow = this.displayShadow;\n\n        if (this.displayShadow) {\n\n            // Update the shadow camera rendering bounds to encapsulate the\n            // model. We use the bounding sphere of the bounding box for\n            // simplicity -- this could be a tighter fit.\n            const sphere = bbox.getBoundingSphere(new THREE.Sphere());\n            const minmax = sphere.radius;\n            const cam = dirLight.shadow.camera;\n            cam.left = cam.bottom = -minmax;\n            cam.right = cam.top = minmax;\n\n            // Update the camera to focus on the center of the model so the\n            // shadow can encapsulate it\n            const offset = dirLight.position.clone().sub(dirLight.target.position);\n            dirLight.target.position.copy(center);\n            dirLight.position.copy(center).add(offset);\n\n            cam.updateProjectionMatrix();\n\n        }\n\n    }\n\n    _scheduleLoad() {\n\n        // if our current model is already what's being requested\n        // or has been loaded then early out\n        if (this._prevload === `${ this.package }|${ this.urdf }`) return;\n        this._prevload = `${ this.package }|${ this.urdf }`;\n\n        // if we're already waiting on a load then early out\n        if (this._loadScheduled) return;\n        this._loadScheduled = true;\n\n        if (this.robot) {\n\n            this.robot.traverse(c => c.dispose && c.dispose());\n            this.robot.parent.remove(this.robot);\n            this.robot = null;\n\n        }\n\n        requestAnimationFrame(() => {\n\n            this._loadUrdf(this.package, this.urdf);\n            this._loadScheduled = false;\n\n        });\n\n    }\n\n    // Watch the package and urdf field and load the robot model.\n    // This should _only_ be called from _scheduleLoad because that\n    // ensures the that current robot has been removed\n    _loadUrdf(pkg, urdf) {\n\n        this.dispatchEvent(new CustomEvent('urdf-change', { bubbles: true, cancelable: true, composed: true }));\n\n        if (urdf) {\n\n            // Keep track of this request and make\n            // sure it doesn't get overwritten by\n            // a subsequent one\n            this._requestId++;\n            const requestId = this._requestId;\n\n            const updateMaterials = mesh => {\n\n                mesh.traverse(c => {\n\n                    if (c.isMesh) {\n\n                        c.castShadow = true;\n                        c.receiveShadow = true;\n\n                        if (c.material) {\n\n                            const mats =\n                                (Array.isArray(c.material) ? c.material : [c.material])\n                                    .map(m => {\n\n                                        if (m instanceof THREE.MeshBasicMaterial) {\n\n                                            m = new THREE.MeshPhongMaterial();\n\n                                        }\n\n                                        if (m.map) {\n\n                                            m.map.encoding = THREE.GammaEncoding;\n\n                                        }\n\n                                        return m;\n\n                                    });\n                            c.material = mats.length === 1 ? mats[0] : mats;\n\n                        }\n\n                    }\n\n                });\n\n            };\n\n            if (pkg.includes(':') && (pkg.split(':')[1].substring(0, 2)) !== '//') {\n                // E.g. pkg = \"pkg_name: path/to/pkg_name, pk2: path2/to/pk2\"}\n\n                // Convert pkg(s) into a map. E.g.\n                // { \"pkg_name\": \"path/to/pkg_name\",\n                //   \"pk2\":      \"path2/to/pk2\"      }\n\n                pkg = pkg.split(',').reduce((map, value) => {\n\n                    const split = value.split(/:/).filter(x => !!x);\n                    const pkgName = split.shift().trim();\n                    const pkgPath = split.join(':').trim();\n                    map[pkgName] = pkgPath;\n\n                    return map;\n\n                }, {});\n            }\n\n            let robot = null;\n            const manager = new THREE.LoadingManager();\n            manager.onLoad = () => {\n\n                // If another request has come in to load a new\n                // robot, then ignore this one\n                if (this._requestId !== requestId) {\n\n                    robot.traverse(c => c.dispose && c.dispose());\n                    return;\n\n                }\n\n                this.robot = robot;\n                this.world.add(robot);\n                updateMaterials(robot);\n\n                this._setIgnoreLimits(this.ignoreLimits);\n\n                this.dispatchEvent(new CustomEvent('urdf-processed', { bubbles: true, cancelable: true, composed: true }));\n                this.dispatchEvent(new CustomEvent('geometry-loaded', { bubbles: true, cancelable: true, composed: true }));\n\n                this.recenter();\n\n            };\n\n            if (this.urlModifierFunc) {\n\n                manager.setURLModifier(this.urlModifierFunc);\n\n            }\n\n            new URDFLoader(manager).load(\n                urdf,\n\n                // onComplete\n                (model) => {\n                    robot = model;\n                },\n\n                // onProgress\n                () => null,\n\n                // onError\n                () => null,\n\n                // options\n                {\n\n                    packages: pkg,\n                    loadMeshCb: this.loadMeshFunc,\n                    fetchOptions: { mode: 'cors', credentials: 'same-origin' },\n\n                });\n\n        }\n\n    }\n\n    // Watch the coordinate frame and update the\n    // rotation of the scene to match\n    _setUp(up) {\n\n        if (!up) up = '+Z';\n        up = up.toUpperCase();\n        const sign = up.replace(/[^-+]/g, '')[0] || '+';\n        const axis = up.replace(/[^XYZ]/gi, '')[0] || 'Z';\n\n        const PI = Math.PI;\n        const HALFPI = PI / 2;\n        if (axis === 'X') this.world.rotation.set(0, 0, sign === '+' ? HALFPI : -HALFPI);\n        if (axis === 'Z') this.world.rotation.set(sign === '+' ? -HALFPI : HALFPI, 0, 0);\n        if (axis === 'Y') this.world.rotation.set(sign === '+' ? 0 : PI, 0, 0);\n\n    }\n\n    // Updates the current robot's angles to ignore\n    // joint limits or not\n    _setIgnoreLimits(ignore, dispatch = false) {\n\n        if (this.robot) {\n\n            Object\n                .values(this.robot.joints)\n                .forEach(joint => {\n\n                    joint.ignoreLimits = ignore;\n                    joint.setAngle(joint.angle);\n\n                });\n\n        }\n\n        if (dispatch) {\n\n            this.dispatchEvent(new CustomEvent('ignore-limits-change', { bubbles: true, cancelable: true, composed: true }));\n\n        }\n\n    }\n\n};\n","import * as THREE from 'three';\nimport URDFViewer from './urdf-viewer-element.js';\n\n// urdf-manipulator element\n// Displays a URDF model that can be manipulated with the mouse\n\n// Events\n// joint-mouseover: Fired when a joint is hovered over\n// joint-mouseout: Fired when a joint is no longer hovered over\n// manipulate-start: Fires when a joint is manipulated\n// manipulate-end: Fires when a joint is done being manipulated\nexport default\nclass URDFManipulator extends URDFViewer {\n\n    static get observedAttributes() {\n\n        return ['highlight-color', ...super.observedAttributes];\n\n    }\n\n    get disableDragging() { return this.hasAttribute('disable-dragging'); }\n    set disableDragging(val) { val ? this.setAttribute('disable-dragging', !!val) : this.removeAttribute('disable-dragging'); }\n\n    get highlightColor() { return this.getAttribute('highlight-color') || '#FFFFFF'; }\n    set highlightColor(val) { val ? this.setAttribute('highlight-color', val) : this.removeAttribute('highlight-color'); }\n\n    constructor(...args) {\n\n        super(...args);\n\n        // The highlight material\n        this.highlightMaterial =\n            new THREE.MeshPhongMaterial({\n                shininess: 10,\n                color: this.highlightColor,\n                emissive: this.highlightColor,\n                emissiveIntensity: 0.25,\n            });\n\n        const el = this.renderer.domElement;\n\n        // Saved mouse data between frames and initial\n        // click point in space\n        const mouse = new THREE.Vector2();\n        const lastMouse = new THREE.Vector2();\n        const clickPoint = new THREE.Vector3();\n\n        // Reuseable variables\n        const raycaster = new THREE.Raycaster();\n        const delta = new THREE.Vector2();\n        const plane = new THREE.Plane();\n        const line = new THREE.Line3();\n\n        // The joint being manipulated\n        let dragging = null;\n\n        const toMouseCoord = (e, v) => {\n\n            v.x = ((e.pageX - el.offsetLeft) / el.offsetWidth) * 2 - 1;\n            v.y = -((e.pageY - el.offsetTop) / el.offsetHeight) * 2 + 1;\n\n        };\n\n        // Get which part of the robot is hit by the mouse click\n        const getCollisions = m => {\n\n            if (!this.robot) return [];\n\n            raycaster.setFromCamera(m, this.camera);\n\n            const meshes = [];\n            this.robot.traverse(c => c.type === 'Mesh' && meshes.push(c));\n\n            return raycaster.intersectObjects(meshes);\n\n        };\n\n        const isJoint = j => {\n\n            return j.isURDFJoint && j.jointType !== 'fixed';\n\n        };\n\n        // Find the nearest parent that is a joint\n        const findNearestJoint = m => {\n\n            let curr = m;\n            while (curr) {\n\n                if (isJoint(curr)) {\n\n                    break;\n\n                }\n\n                curr = curr.parent;\n\n            }\n\n            return curr;\n\n        };\n\n        // Highlight the link geometry under a joint\n        const highlightLinkGeometry = (m, revert) => {\n\n            const traverse = c => {\n\n                // Set or revert the highlight color\n                if (c.type === 'Mesh') {\n\n                    if (revert) {\n\n                        c.material = c.__origMaterial;\n                        delete c.__origMaterial;\n\n                    } else {\n\n                        c.__origMaterial = c.material;\n                        c.material = this.highlightMaterial;\n\n                    }\n\n                }\n\n                // Look into the children and stop if the next child is\n                // another joint\n                if (c === m || !isJoint(c)) {\n\n                    for (let i = 0; i < c.children.length; i++) {\n\n                        traverse(c.children[i]);\n\n                    }\n\n                }\n\n            };\n\n            traverse(m);\n\n        };\n\n        const temp = new THREE.Vector3();\n        const intersect1 = new THREE.Vector3();\n        const intersect2 = new THREE.Vector3();\n\n        // Get the changed angle between mouse position 1 and 2\n        // when manipulating target\n        const getAngle = (tg, m1, m2) => {\n\n            // TODO: Why is the constant negated?\n            plane.normal.copy(tg.axis).transformDirection(tg.matrixWorld).normalize();\n            plane.constant = -plane.normal.dot(clickPoint);\n\n            // If the camera is looking at the rotation axis at a skewed angle\n            temp.copy(this.camera.position).sub(clickPoint).normalize();\n            if (Math.abs(temp.dot(plane.normal)) < 0.2) {\n\n                // distance to the clicked point\n                const dist = temp.copy(clickPoint).sub(this.camera.position).length() * 0.9;\n\n                // Get the point closest to the original clicked point\n                // and use that as center of the rotation axis\n                temp.set(0, 0, 0).applyMatrix4(tg.matrixWorld);\n                temp.addScaledVector(plane.normal, -plane.distanceToPoint(temp));\n\n                // Project out from the camera\n                raycaster.setFromCamera(m1, this.camera);\n                intersect1.copy(raycaster.ray.origin).add(\n                    raycaster.ray.direction.normalize().multiplyScalar(dist)\n                );\n                intersect1.sub(temp);\n\n                raycaster.setFromCamera(m2, this.camera);\n                intersect2.copy(raycaster.ray.origin).add(\n                    raycaster.ray.direction.normalize().multiplyScalar(dist)\n                );\n                intersect2.sub(temp);\n\n                temp.crossVectors(intersect2, intersect1).normalize();\n\n                // Multiply by a magic number to make it feel good\n                return temp.dot(plane.normal) * intersect2.angleTo(intersect1) * 2;\n\n            } else {\n\n                // Get the point closest to the original clicked point\n                // and use that as center of the rotation axis\n                temp.set(0, 0, 0).applyMatrix4(tg.matrixWorld);\n                temp.addScaledVector(plane.normal, -plane.distanceToPoint(temp));\n\n                // project onto the plane of rotation\n                raycaster.setFromCamera(m1, this.camera);\n                line.start.copy(raycaster.ray.origin);\n                line.end.copy(raycaster.ray.origin).add(raycaster.ray.direction.normalize().multiplyScalar(1e5));\n                plane.intersectLine(line, intersect1);\n                intersect1.sub(temp);\n\n                raycaster.setFromCamera(m2, this.camera);\n                line.start.copy(raycaster.ray.origin);\n                line.end.copy(raycaster.ray.origin).add(raycaster.ray.direction.normalize().multiplyScalar(1e5));\n                plane.intersectLine(line, intersect2);\n                intersect2.sub(temp);\n\n                temp.crossVectors(intersect2, intersect1);\n\n                return Math.sign(temp.dot(plane.normal)) * intersect2.angleTo(intersect1);\n\n            }\n\n        };\n\n        // Get the amount to move the prismatic joint based on the mouse move\n        const getMove = (tg, m1, m2) => {\n\n            const dist = temp.copy(clickPoint).sub(this.camera.position).length();\n\n            raycaster.setFromCamera(m1, this.camera);\n            raycaster.ray.direction.normalize().multiplyScalar(dist);\n            intersect1.copy(raycaster.ray.origin).add(raycaster.ray.direction);\n\n            raycaster.setFromCamera(m2, this.camera);\n            raycaster.ray.direction.normalize().multiplyScalar(dist);\n            intersect2.copy(raycaster.ray.origin).add(raycaster.ray.direction);\n\n            temp.copy(intersect2).sub(intersect1);\n\n            plane.normal.copy(tg.axis).transformDirection(tg.parent.matrixWorld).normalize();\n\n            return temp.length() * -Math.sign(temp.dot(plane.normal));\n\n        };\n\n        el.addEventListener('mousedown', e => {\n\n            if (this.disableDragging) return;\n\n            toMouseCoord(e, mouse);\n            lastMouse.copy(mouse);\n\n            // get the information on the clicked item\n            // and set the dragged joint\n            const target = getCollisions(mouse).shift();\n            if (target) {\n\n                dragging = findNearestJoint(target.object);\n\n                if (dragging) {\n\n                    clickPoint.copy(target.point);\n                    this.dispatchEvent(new CustomEvent('manipulate-start', { bubbles: true, cancelable: true, detail: dragging.name }));\n                    this.controls.enabled = false;\n\n                }\n\n            }\n\n        }, true);\n\n        let hovered = null;\n        this._mouseMoveFunc = e => {\n\n            toMouseCoord(e, mouse);\n            delta.copy(mouse).sub(lastMouse);\n\n            // Keep track of the hovered item. If an item is being\n            // dragged, then it is considered hovered\n            const wasHovered = hovered;\n            if (hovered) {\n\n                hovered = null;\n            }\n\n            if (dragging == null && this.disableDragging === false) {\n\n                const collision = getCollisions(mouse).shift() || null;\n                const joint = collision && findNearestJoint(collision.object);\n                if (joint) {\n\n                    hovered = joint;\n\n                }\n\n            } else if (dragging) {\n\n                hovered = dragging;\n\n            }\n\n            // Highlight the meshes and broadcast events if the hovered item changed\n            if (hovered !== wasHovered) {\n\n                if (wasHovered) {\n\n                    highlightLinkGeometry(wasHovered, true);\n                    this.dispatchEvent(new CustomEvent('joint-mouseout', { bubbles: true, cancelable: true, detail: wasHovered.name }));\n\n                }\n\n                if (hovered) {\n\n                    highlightLinkGeometry(hovered, false);\n                    this.dispatchEvent(new CustomEvent('joint-mouseover', { bubbles: true, cancelable: true, detail: hovered.name }));\n\n                }\n\n                this.redraw();\n\n            }\n\n            // Apply the manipulation\n            if (dragging !== null) {\n\n                let delta = null;\n                if (dragging.jointType === 'revolute' || dragging.jointType === 'continuous') {\n\n                    delta = getAngle(dragging, mouse, lastMouse);\n\n                } else if (dragging.jointType === 'prismatic') {\n\n                    delta = getMove(dragging, mouse, lastMouse);\n\n                } else {\n\n                    // Not supported\n\n                }\n\n                if (delta) {\n\n                    this.setAngle(dragging.name, dragging.angle + delta);\n\n                }\n\n            }\n\n            lastMouse.copy(mouse);\n\n        };\n\n        // Clean up\n        this._mouseUpFunc = e => {\n\n            if (dragging) {\n\n                this.dispatchEvent(new CustomEvent('manipulate-end', { bubbles: true, cancelable: true, detail: dragging.name }));\n                dragging = null;\n                this.controls.enabled = true;\n\n            }\n\n        };\n\n    }\n\n    connectedCallback() {\n\n        super.connectedCallback();\n        window.addEventListener('mousemove', this._mouseMoveFunc, true);\n        window.addEventListener('mouseup', this._mouseUpFunc, true);\n\n    }\n\n    disconnectedCallback() {\n\n        super.disconnectedCallback();\n        window.removeEventListener('mousemove', this._mouseMoveFunc, true);\n        window.removeEventListener('mouseup', this._mouseUpFunc, true);\n\n    }\n\n    attributeChangedCallback(attr, oldval, newval) {\n\n        super.attributeChangedCallback(attr, oldval, newval);\n\n        switch (attr) {\n\n            case 'highlight-color':\n                this.highlightMaterial.color.set(this.highlightColor);\n                this.highlightMaterial.emissive.set(this.highlightColor);\n                break;\n\n        }\n\n    }\n\n};\n"],"names":["URDFColliderClone","proto","Object","getPrototypeOf","args","result","clone","call","isURDFCollider","makeURDFCollider","object","URDFLink","isURDFLink","type","urdfNode","source","recursive","Object3D","URDFJoint","_jointType","v","jointType","jointValue","Array","fill","isURDFJoint","axis","limit","lower","upper","ignoreLimits","origPosition","origQuaternion","isArray","setOffset","values","map","parseFloat","position","quaternion","angle","Math","min","max","delta","Quaternion","setFromAxisAngle","multiplyQuaternions","matrixWorldNeedsUpdate","copy","addScaledVector","worldMatrixNeedsUpdate","console","warn","URDFRobot","isURDFRobot","urdfRobotNode","robotName","links","joints","traverse","c","name","jointName","joint","setAngle","angles","tempQuaternion","THREE","tempEuler","processTuple","val","trim","split","num","applyRotation","obj","rpy","additive","rotation","set","setFromEuler","multiply","URDFLoader","manager","urdf","onComplete","onProgress","onError","options","workingPath","extractUrlBase","urdfPath","resolveURL","errors","managerOnErrorDefault","managerOnProgressDefault","managerOnLoadDefault","model","bind","onLoad","url","itemsLoaded","itemsTotal","partialErrors","keys","length","undefined","assign","itemStart","fetch","fetchOptions","then","res","text","data","parse","itemEnd","e","error","itemError","content","packages","loadMeshCb","defaultMeshLoader","parseVisual","parseCollision","linkMap","jointMap","materialMap","resolvePath","path","test","replace","targetPkg","relPath","endsWith","processUrdf","parser","DOMParser","parseFromString","children","robotNode","filter","nodeName","pop","processRobot","robot","robotNodes","toLowerCase","materials","getAttribute","forEach","m","processMaterial","l","isRoot","querySelector","processLink","j","processJoint","parent","child","xyz","n","add","axisNode","axisXYZ","normalize","link","target","visualNodes","vn","processLinkElement","collisionNodes","node","matNodes","material","rgba","color","setRGB","opacity","transparent","loader","filename","filePath","load","linkObj","isCollisionNode","scale","primitiveModel","materialNode","geoType","scaleAttr","err","raycast","acceleratedRaycast","geometry","boundsTree","MeshBVH","x","y","z","size","radius","PI","done","STLLoader","geom","mesh","ColladaLoader","dae","scene","URDFViewer","setAttribute","hasAttribute","removeAttribute","_setAngles","_requestId","_dirty","_loadScheduled","loadMeshFunc","urlModifierFunc","ambientLight","ambientColor","groundColor","lerp","intensity","dirLight","shadow","mapSize","width","height","castShadow","renderer","antialias","alpha","setClearColor","setClearAlpha","shadowMap","enabled","gammaOutput","camera","world","plane","side","receiveShadow","controls","OrbitControls","domElement","rotateSpeed","zoomSpeed","panSpeed","enableZoom","enableDamping","maxDistance","minDistance","addEventListener","recenter","directionalLight","_setUp","up","_renderLoop","parentNode","updateSize","autoRedraw","noAutoRecenter","_updateEnvironment","render","update","_renderLoopId","requestAnimationFrame","constructor","_styletag","styletag","document","createElement","innerHTML","tagName","head","appendChild","childElementCount","cancelAnimationFrame","attr","oldval","newval","_scheduleLoad","_setIgnoreLimits","r","w","clientWidth","h","clientHeight","currsize","getSize","setPixelRatio","window","devicePixelRatio","setSize","aspect","updateProjectionMatrix","redraw","origAngle","newAngle","dispatchEvent","CustomEvent","bubbles","cancelable","detail","updateMatrixWorld","bbox","temp","boundingBox","computeBoundingBox","applyMatrix4","matrixWorld","union","center","getCenter","displayShadow","sphere","getBoundingSphere","minmax","cam","left","bottom","right","top","offset","sub","_prevload","dispose","remove","_loadUrdf","pkg","composed","requestId","updateMaterials","isMesh","mats","encoding","includes","substring","reduce","value","pkgName","shift","pkgPath","join","setURLModifier","mode","credentials","toUpperCase","sign","HALFPI","ignore","dispatch","HTMLElement","URDFManipulator","highlightMaterial","shininess","highlightColor","emissive","emissiveIntensity","el","mouse","lastMouse","clickPoint","raycaster","line","dragging","toMouseCoord","pageX","offsetLeft","offsetWidth","pageY","offsetTop","offsetHeight","getCollisions","setFromCamera","meshes","push","intersectObjects","isJoint","findNearestJoint","curr","highlightLinkGeometry","revert","__origMaterial","i","intersect1","intersect2","getAngle","tg","m1","m2","normal","transformDirection","constant","dot","abs","dist","distanceToPoint","ray","origin","direction","multiplyScalar","crossVectors","angleTo","start","end","intersectLine","getMove","disableDragging","point","hovered","_mouseMoveFunc","wasHovered","collision","_mouseUpFunc","removeEventListener"],"mappings":"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"}