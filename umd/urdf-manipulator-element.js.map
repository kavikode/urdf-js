{"version":3,"file":"urdf-manipulator-element.js","sources":["../src/urdf-manipulator-element.js"],"sourcesContent":["import * as THREE from 'three';\nimport URDFViewer from './urdf-viewer-element.js';\n\n// urdf-manipulator element\n// Displays a URDF model that can be manipulated with the mouse\n\n// Events\n// joint-mouseover: Fired when a joint is hovered over\n// joint-mouseout: Fired when a joint is no longer hovered over\n// manipulate-start: Fires when a joint is manipulated\n// manipulate-end: Fires when a joint is done being manipulated\nexport default\nclass URDFManipulator extends URDFViewer {\n\n    static get observedAttributes() {\n\n        return ['highlight-color', ...super.observedAttributes];\n\n    }\n\n    get disableDragging() { return this.hasAttribute('disable-dragging'); }\n    set disableDragging(val) { val ? this.setAttribute('disable-dragging', !!val) : this.removeAttribute('disable-dragging'); }\n\n    get highlightColor() { return this.getAttribute('highlight-color') || '#FFFFFF'; }\n    set highlightColor(val) { val ? this.setAttribute('highlight-color', val) : this.removeAttribute('highlight-color'); }\n\n    constructor(...args) {\n\n        super(...args);\n\n        // The highlight material\n        this.highlightMaterial =\n            new THREE.MeshPhongMaterial({\n                shininess: 10,\n                color: this.highlightColor,\n                emissive: this.highlightColor,\n                emissiveIntensity: 0.25,\n            });\n\n        const el = this.renderer.domElement;\n\n        // Saved mouse data between frames and initial\n        // click point in space\n        const mouse = new THREE.Vector2();\n        const lastMouse = new THREE.Vector2();\n        const clickPoint = new THREE.Vector3();\n\n        // Reuseable variables\n        const raycaster = new THREE.Raycaster();\n        const delta = new THREE.Vector2();\n        const plane = new THREE.Plane();\n        const line = new THREE.Line3();\n\n        // The joint being manipulated\n        let dragging = null;\n\n        const toMouseCoord = (e, v) => {\n\n            v.x = ((e.pageX - el.offsetLeft) / el.offsetWidth) * 2 - 1;\n            v.y = -((e.pageY - el.offsetTop) / el.offsetHeight) * 2 + 1;\n\n        };\n\n        // Get which part of the robot is hit by the mouse click\n        const getCollisions = m => {\n\n            if (!this.robot) return [];\n\n            raycaster.setFromCamera(m, this.camera);\n\n            const meshes = [];\n            this.robot.traverse(c => c.type === 'Mesh' && meshes.push(c));\n\n            return raycaster.intersectObjects(meshes);\n\n        };\n\n        const isJoint = j => {\n\n            return j.isURDFJoint && j.jointType !== 'fixed';\n\n        };\n\n        // Find the nearest parent that is a joint\n        const findNearestJoint = m => {\n\n            let curr = m;\n            while (curr) {\n\n                if (isJoint(curr)) {\n\n                    break;\n\n                }\n\n                curr = curr.parent;\n\n            }\n\n            return curr;\n\n        };\n\n        // Highlight the link geometry under a joint\n        const highlightLinkGeometry = (m, revert) => {\n\n            const traverse = c => {\n\n                // Set or revert the highlight color\n                if (c.type === 'Mesh') {\n\n                    if (revert) {\n\n                        c.material = c.__origMaterial;\n                        delete c.__origMaterial;\n\n                    } else {\n\n                        c.__origMaterial = c.material;\n                        c.material = this.highlightMaterial;\n\n                    }\n\n                }\n\n                // Look into the children and stop if the next child is\n                // another joint\n                if (c === m || !isJoint(c)) {\n\n                    for (let i = 0; i < c.children.length; i++) {\n\n                        traverse(c.children[i]);\n\n                    }\n\n                }\n\n            };\n\n            traverse(m);\n\n        };\n\n        const temp = new THREE.Vector3();\n        const intersect1 = new THREE.Vector3();\n        const intersect2 = new THREE.Vector3();\n\n        // Get the changed angle between mouse position 1 and 2\n        // when manipulating target\n        const getAngle = (tg, m1, m2) => {\n\n            // TODO: Why is the constant negated?\n            plane.normal.copy(tg.axis).transformDirection(tg.matrixWorld).normalize();\n            plane.constant = -plane.normal.dot(clickPoint);\n\n            // If the camera is looking at the rotation axis at a skewed angle\n            temp.copy(this.camera.position).sub(clickPoint).normalize();\n            if (Math.abs(temp.dot(plane.normal)) < 0.2) {\n\n                // distance to the clicked point\n                const dist = temp.copy(clickPoint).sub(this.camera.position).length() * 0.9;\n\n                // Get the point closest to the original clicked point\n                // and use that as center of the rotation axis\n                temp.set(0, 0, 0).applyMatrix4(tg.matrixWorld);\n                temp.addScaledVector(plane.normal, -plane.distanceToPoint(temp));\n\n                // Project out from the camera\n                raycaster.setFromCamera(m1, this.camera);\n                intersect1.copy(raycaster.ray.origin).add(\n                    raycaster.ray.direction.normalize().multiplyScalar(dist)\n                );\n                intersect1.sub(temp);\n\n                raycaster.setFromCamera(m2, this.camera);\n                intersect2.copy(raycaster.ray.origin).add(\n                    raycaster.ray.direction.normalize().multiplyScalar(dist)\n                );\n                intersect2.sub(temp);\n\n                temp.crossVectors(intersect2, intersect1).normalize();\n\n                // Multiply by a magic number to make it feel good\n                return temp.dot(plane.normal) * intersect2.angleTo(intersect1) * 2;\n\n            } else {\n\n                // Get the point closest to the original clicked point\n                // and use that as center of the rotation axis\n                temp.set(0, 0, 0).applyMatrix4(tg.matrixWorld);\n                temp.addScaledVector(plane.normal, -plane.distanceToPoint(temp));\n\n                // project onto the plane of rotation\n                raycaster.setFromCamera(m1, this.camera);\n                line.start.copy(raycaster.ray.origin);\n                line.end.copy(raycaster.ray.origin).add(raycaster.ray.direction.normalize().multiplyScalar(1e5));\n                plane.intersectLine(line, intersect1);\n                intersect1.sub(temp);\n\n                raycaster.setFromCamera(m2, this.camera);\n                line.start.copy(raycaster.ray.origin);\n                line.end.copy(raycaster.ray.origin).add(raycaster.ray.direction.normalize().multiplyScalar(1e5));\n                plane.intersectLine(line, intersect2);\n                intersect2.sub(temp);\n\n                temp.crossVectors(intersect2, intersect1);\n\n                return Math.sign(temp.dot(plane.normal)) * intersect2.angleTo(intersect1);\n\n            }\n\n        };\n\n        // Get the amount to move the prismatic joint based on the mouse move\n        const getMove = (tg, m1, m2) => {\n\n            const dist = temp.copy(clickPoint).sub(this.camera.position).length();\n\n            raycaster.setFromCamera(m1, this.camera);\n            raycaster.ray.direction.normalize().multiplyScalar(dist);\n            intersect1.copy(raycaster.ray.origin).add(raycaster.ray.direction);\n\n            raycaster.setFromCamera(m2, this.camera);\n            raycaster.ray.direction.normalize().multiplyScalar(dist);\n            intersect2.copy(raycaster.ray.origin).add(raycaster.ray.direction);\n\n            temp.copy(intersect2).sub(intersect1);\n\n            plane.normal.copy(tg.axis).transformDirection(tg.parent.matrixWorld).normalize();\n\n            return temp.length() * -Math.sign(temp.dot(plane.normal));\n\n        };\n\n        el.addEventListener('mousedown', e => {\n\n            if (this.disableDragging) return;\n\n            toMouseCoord(e, mouse);\n            lastMouse.copy(mouse);\n\n            // get the information on the clicked item\n            // and set the dragged joint\n            const target = getCollisions(mouse).shift();\n            if (target) {\n\n                dragging = findNearestJoint(target.object);\n\n                if (dragging) {\n\n                    clickPoint.copy(target.point);\n                    this.dispatchEvent(new CustomEvent('manipulate-start', { bubbles: true, cancelable: true, detail: dragging.name }));\n                    this.controls.enabled = false;\n\n                }\n\n            }\n\n        }, true);\n\n        let hovered = null;\n        this._mouseMoveFunc = e => {\n\n            toMouseCoord(e, mouse);\n            delta.copy(mouse).sub(lastMouse);\n\n            // Keep track of the hovered item. If an item is being\n            // dragged, then it is considered hovered\n            const wasHovered = hovered;\n            if (hovered) {\n\n                hovered = null;\n            }\n\n            if (dragging == null && this.disableDragging === false) {\n\n                const collision = getCollisions(mouse).shift() || null;\n                const joint = collision && findNearestJoint(collision.object);\n                if (joint) {\n\n                    hovered = joint;\n\n                }\n\n            } else if (dragging) {\n\n                hovered = dragging;\n\n            }\n\n            // Highlight the meshes and broadcast events if the hovered item changed\n            if (hovered !== wasHovered) {\n\n                if (wasHovered) {\n\n                    highlightLinkGeometry(wasHovered, true);\n                    this.dispatchEvent(new CustomEvent('joint-mouseout', { bubbles: true, cancelable: true, detail: wasHovered.name }));\n\n                }\n\n                if (hovered) {\n\n                    highlightLinkGeometry(hovered, false);\n                    this.dispatchEvent(new CustomEvent('joint-mouseover', { bubbles: true, cancelable: true, detail: hovered.name }));\n\n                }\n\n                this.redraw();\n\n            }\n\n            // Apply the manipulation\n            if (dragging !== null) {\n\n                let delta = null;\n                if (dragging.jointType === 'revolute' || dragging.jointType === 'continuous') {\n\n                    delta = getAngle(dragging, mouse, lastMouse);\n\n                } else if (dragging.jointType === 'prismatic') {\n\n                    delta = getMove(dragging, mouse, lastMouse);\n\n                } else {\n\n                    // Not supported\n\n                }\n\n                if (delta) {\n\n                    this.setAngle(dragging.name, dragging.angle + delta);\n\n                }\n\n            }\n\n            lastMouse.copy(mouse);\n\n        };\n\n        // Clean up\n        this._mouseUpFunc = e => {\n\n            if (dragging) {\n\n                this.dispatchEvent(new CustomEvent('manipulate-end', { bubbles: true, cancelable: true, detail: dragging.name }));\n                dragging = null;\n                this.controls.enabled = true;\n\n            }\n\n        };\n\n    }\n\n    connectedCallback() {\n\n        super.connectedCallback();\n        window.addEventListener('mousemove', this._mouseMoveFunc, true);\n        window.addEventListener('mouseup', this._mouseUpFunc, true);\n\n    }\n\n    disconnectedCallback() {\n\n        super.disconnectedCallback();\n        window.removeEventListener('mousemove', this._mouseMoveFunc, true);\n        window.removeEventListener('mouseup', this._mouseUpFunc, true);\n\n    }\n\n    attributeChangedCallback(attr, oldval, newval) {\n\n        super.attributeChangedCallback(attr, oldval, newval);\n\n        switch (attr) {\n\n            case 'highlight-color':\n                this.highlightMaterial.color.set(this.highlightColor);\n                this.highlightMaterial.emissive.set(this.highlightColor);\n                break;\n\n        }\n\n    }\n\n};\n"],"names":["THREE.MeshPhongMaterial","THREE.Vector2","THREE.Vector3","THREE.Raycaster","THREE.Plane","THREE.Line3"],"mappings":"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"}